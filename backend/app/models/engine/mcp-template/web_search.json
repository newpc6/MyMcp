{
  "name": "web_search",
  "description": "网络搜索工具模块",
  "module_path": "repository.web_search",
  "author": "系统",
  "version": "1.0.0",
  "tags": "搜索,网络,工具",
  "icon": "search",
  "is_hosted": true,
  "category": "搜索工具",
  "config_schema": "{\n    \"api_key\": {\n        \"type\": \"string\",\n        \"description\": \"搜索API密钥\",\n        \"required\": true\n    },\n    \"search_engine\": {\n        \"type\": \"string\",\n        \"description\": \"搜索引擎类型\",\n        \"choices\": [\"google\", \"bing\", \"baidu\"],\n        \"default\": \"google\"\n    },\n    \"result_count\": {\n        \"type\": \"integer\",\n        \"description\": \"返回结果数量\",\n        \"default\": 5,\n        \"min\": 1,\n        \"max\": 20\n    }\n}",
  "code": "\"\"\"\n网络搜索工具模块，提供基本的网络搜索功能\n\"\"\"\nfrom typing import List, Dict, Any, Optional\n\n# 配置模式，定义需要的配置字段\nCONFIG_SCHEMA = {\n    \"api_key\": {\n        \"type\": \"string\",\n        \"description\": \"搜索API密钥\",\n        \"required\": True\n    },\n    \"search_engine\": {\n        \"type\": \"string\",\n        \"description\": \"搜索引擎类型\",\n        \"choices\": [\"google\", \"bing\", \"baidu\"],\n        \"default\": \"google\"\n    },\n    \"result_count\": {\n        \"type\": \"integer\",\n        \"description\": \"返回结果数量\",\n        \"default\": 5,\n        \"min\": 1,\n        \"max\": 20\n    }\n}\n\n# 演示用配置，实际会被用户配置覆盖\nconfig = {\n    \"api_key\": \"demo_key\",\n    \"search_engine\": \"google\",\n    \"result_count\": 5\n}\n\n\ndef search_web(\n    query: str, result_count: Optional[int] = None\n) -> Dict[str, Any]:\n    \"\"\"\n    在网络上搜索内容\n    \n    参数:\n        query: 搜索查询词\n        result_count: 返回结果数量，如果不指定则使用配置值\n        \n    返回:\n        搜索结果和元数据\n    \"\"\"\n    # 使用配置中的值或参数中的值\n    count = result_count or config.get(\"result_count\", 5)\n    \n    # 演示用结果\n    demo_results = [\n        {\n            \"title\": f\"搜索结果 1 - {query}\",\n            \"url\": f\"https://example.com/1?q={query}\",\n            \"snippet\": f\"这是关于 {query} 的第一个结果的摘要内容...\"\n        },\n        {\n            \"title\": f\"搜索结果 2 - {query}\",\n            \"url\": f\"https://example.com/2?q={query}\",\n            \"snippet\": f\"这是关于 {query} 的另一个相关页面...\"\n        },\n        {\n            \"title\": f\"详解{query}的完整指南\",\n            \"url\": f\"https://example.com/guide?topic={query}\",\n            \"snippet\": f\"{query}的完整教程和指南，包含详细的步骤和示例...\"\n        },\n        {\n            \"title\": f\"{query} 相关的最新新闻\",\n            \"url\": f\"https://example.com/news?topic={query}\",\n            \"snippet\": f\"最新的关于{query}的新闻报道和行业动态...\"\n        },\n        {\n            \"title\": f\"{query} 官方文档和资源\",\n            \"url\": f\"https://example.com/docs?subject={query}\",\n            \"snippet\": f\"官方提供的{query}文档、API参考和开发资源...\"\n        }\n    ]\n    \n    # 根据请求数量返回结果\n    actual_results = demo_results[:min(count, len(demo_results))]\n    \n    return {\n        \"query\": query,\n        \"results\": actual_results,\n        \"total_results\": len(actual_results),\n        \"search_engine\": config.get(\"search_engine\", \"google\"),\n        \"success\": True\n    }\n\n\ndef get_trending_topics() -> List[str]:\n    \"\"\"\n    获取当前热门搜索话题\n    \n    返回:\n        热门话题列表\n    \"\"\"\n    # 演示用热门话题\n    return [\n        \"人工智能最新进展\",\n        \"Web开发趋势2024\",\n        \"数据科学教程\",\n        \"Python编程技巧\",\n        \"云计算服务比较\"\n    ]",
  "markdown_docs": "# Web搜索工具\n\n## 简介\nWeb搜索工具模块提供网络搜索功能，可以从互联网上获取信息和热门话题。\n\n## 配置项\n该模块需要以下配置：\n\n| 配置项 | 类型 | 描述 | 默认值 |\n|-------|-----|------|-------|\n| api_key | 字符串 | 搜索API密钥 | 必填 |\n| search_engine | 字符串 | 搜索引擎类型 | google |\n| result_count | 整数 | 返回结果数量 | 5 |\n\n## 功能列表\n\n### 1. 网络搜索\n根据查询词在网络上搜索内容，返回相关结果。\n\n**参数：**\n- query: 搜索查询词\n- result_count: 返回结果数量（可选）\n\n**返回：**\n- 包含搜索结果的对象，包括查询词、结果列表、总结果数等\n\n### 2. 获取热门话题\n获取当前互联网上的热门搜索话题。\n\n**返回：**\n- 热门话题字符串列表\n\n## 使用示例\n```python\n# 搜索网络内容\nresults = search_web(\"人工智能\", 3)\n# 返回前3条关于\"人工智能\"的搜索结果\n\n# 获取热门话题\ntopics = get_trending_topics()\n# 返回当前热门话题列表\n```\n\n## 注意事项\n1. 在实际使用前，需要设置有效的API密钥\n2. 搜索结果数量限制为1-20之间\n3. 支持的搜索引擎包括Google、Bing和百度"
}